[{"/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/index.js":"1","/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/App.js":"2","/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/MovieCard.jsx":"3"},{"size":146,"mtime":1665372553988,"results":"4","hashOfConfig":"5"},{"size":1814,"mtime":1665376541993,"results":"6","hashOfConfig":"5"},{"size":447,"mtime":1665375274343,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wav5z0",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/index.js",[],[],"/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/App.js",["18"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport MovieCard from './MovieCard';\n\n\nconst API_URL = 'http://www.omdbapi.com?apikey=9ab56e03'\n\nconst movie1 = {\n\n    \"Title\": \"Star Wars: Episode IV - A New Hope\",\n    \"Year\": \"1977\",\n    \"imdbID\": \"tt0076759\",\n    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BOTA5NjhiOTAtZWM0ZC00MWNhLThiMzEtZDFkOTk2OTU1ZDJkXkEyXkFqcGdeQXVyMTA4NDI1NTQx._V1_SX300.jpg\"\n}\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const searchMovies = async (title) => {\n        const response = await fetch(`${API_URL}&s=${title})`);\n        const data = await response.json();\n\n        setMovies(data.Search);\n    }   \n\n    useEffect(() => {\n        searchMovies('Star Wars');\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <h1>FlixFinder</h1>\n\n            <div className=\"search\">\n                <input\n                    placeholder=\"Search for movies\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <img src={SearchIcon}\n                alt=\"search\"\n                onClick={() => searchMovies(searchTerm)}\n                />\n            </div>\n\n            { movies?.length > 0 ? (\n                    <div className=\"container\">\n                        {movies.map((movie) => (\n                            <MovieCard movie={movie} />))}\n                    </div>\n                ) :  (\n                    <div className=\"empty\">\n                        <h2>No movies found</h2>\n                    </div>\n                )    \n            }\n\n            \n        </div>\n    );\n}\n\nexport default App;\n","/Users/matthewfesta/Desktop/Projects/FrontEnd_Projects/FlixFinder/src/MovieCard.jsx",[],[],{"ruleId":"19","severity":1,"message":"20","line":10,"column":7,"nodeType":"21","messageId":"22","endLine":10,"endColumn":13},"no-unused-vars","'movie1' is assigned a value but never used.","Identifier","unusedVar"]